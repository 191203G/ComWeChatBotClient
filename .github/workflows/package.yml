name: Package exe with nuitka

on:
  push:
    tags:
      - 'v*'

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: 检出
        uses: actions/checkout@v3

      - name: 获取tag名
        uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref }}
          regex: 'refs/tags/([\S]+)'

      - name: 创建python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: 安装依赖
        run: |
            python -m pip install --upgrade pip  &&
            pip install -r requirements.txt

      - name: 构建exe
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          follow-imports: recurse-all
          onefile: true
          output-dir: dist

      - name: 移动文件
        run: |
          mv ./dist/main.exe ./ComWeChat-Client-${{ steps.regex-match.outputs.group1 }}.exe

      - name: 打包文件
        uses: vimtor/action-zip@v1
        with:
          files: ComWeChat-Client-${{ steps.regex-match.outputs.group1 }}.exe .env
          dest: ComWeChat-Client-${{ steps.regex-match.outputs.group1 }}.zip

      - name: 发布版本
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_DOC }}
        with:
          tag_name: ${{ steps.regex-match.outputs.group1 }}
          release_name: Release ${{ steps.regex-match.outputs.group1 }}
          draft: false
          prerelease: false

      - name: 上传文件
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_DOC }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ntchat-client-${{ steps.regex-match.outputs.group1 }}.zip
          asset_name: ntchat-client-${{ steps.regex-match.outputs.group1 }}.zip
          asset_content_type: application/zip


